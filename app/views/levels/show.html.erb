<script>

    var camera, scene, renderer,
    geometry, material, mesh;

    init();
	buildGeometry();
    animate();

    function init() {

        scene = new THREE.Scene();

        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
        camera.position.z = 1000;
        scene.add( camera );

        renderer = new THREE.CanvasRenderer();
        renderer.setSize( window.innerWidth, window.innerHeight );

        document.body.appendChild( renderer.domElement );

    }

	function buildGeometry() {

        material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } );
        geometry = new THREE.CubeGeometry( 200, 200, 200 );
		
        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = 0;
		mesh.position.z = -200;
        scene.add( mesh );

        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = 200;
		mesh.position.z = -200;
        scene.add( mesh );
		
        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = 200;
		mesh.position.z = 0;
        scene.add( mesh );

        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = 200;
		mesh.position.z = 200;
        scene.add( mesh );

        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = 0;
		mesh.position.z = 200;
        scene.add( mesh );

        mesh = new THREE.Mesh( geometry, material );
		mesh.position.x = -200;
		mesh.position.z = 200;
        scene.add( mesh );

	}

    function animate() {

        // note: three.js includes requestAnimationFrame shim
        requestAnimationFrame( animate );
        render();

    }

    function render() {

		camera.position.x += 1;
		camera.position.y += 2;

		camera.lookAt( scene.position );

        renderer.render( scene, camera );

    }

</script>